const User = require("../model/user.model")
const Pass = require("../model/pass.model")
const { ErrorHandler } = require("../middleware/errorMiddleware")

//@desc Generate a pass by user
//@route POST /users/generatePass
const generatePass = async (req, res, next) => {
  try {
    const { name, email, phone, duration, start } = req.body

    async function getOTP(digit) {
      const OTP = String(Math.random().toFixed(digit).split(".")[1])
      const checkOTP = await Pass.find({ checkInTime: { $ne: null } })
      if (checkOTP.OTP === OTP) {
        return await getOTP(digit)
      } else return OTP
    }

    const newPass = await Pass.create({
      name,
      phone,
      email,
      duration,
      start: start + ":00.000Z",
      generatedUserId: req.user.id,
      userName: req.user.name,
      OTP: await getOTP(6),
    })
    res.status(201).json({
      success: true,
      newPass: newPass,
      message: "Pass generated successfully",
    })
  } catch (err) {
    next(err)
  }
}

//@desc View all passes generated by a user
//@route Get /users/viewPasses
const viewPasses = async (req, res, next) => {
  try {
    const passes = await Pass.find({ generatedUserId: req.user.id })

    res.status(201).json({
      success: true,
      passes: passes,
      message: "Passes fetched successfully",
    })
  } catch (err) {
    next(err)
  }
}

//@desc Verify pass by guard
//@route PATCH /users/verifyPass
const verifyPass = async (req, res, next) => {
  try {
    const { otp } = req.body
    if (!otp) throw new ErrorHandler(400, "OTP is required")
    const findOTP = await Pass.findOne({ OTP: otp })
    console.log(findOTP, otp, typeof otp)
    if (!findOTP) throw new ErrorHandler(404, "Invalid OTP")
    else if (findOTP) {
      const passVerified = await Pass.findOneAndUpdate(
        { OTP: otp },
        {
          checkInTime: new Date(),
        }
      )
      res.status(201).json({
        success: true,
        message: "Pass verified successfully",
      })
    }
  } catch (err) {
    next(err)
  }
}

module.exports = { generatePass, viewPasses, verifyPass }
