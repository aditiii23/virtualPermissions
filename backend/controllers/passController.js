const Pass = require("../model/pass.model")
const { ErrorHandler } = require("../middleware/errorMiddleware")

//@desc Generate a pass by user
//@route POST /passes/generatePass
const generatePass = async (req, res, next) => {
  try {
    const { name, phone, duration, start } = req.body
    let email = req.body.email?.toLowerCase()
    const emailRegex = /^[^\s+@]+@[^\s@]+\.[^\s@]{2,}$/i
    const phoneRegex = /^\+?\d{1,3}[- ]?\d{3}[- ]?\d{3}[- ]?\d{4}$/
    if (!name?.length) throw new ErrorHandler(400, "Please enter a valid name")
    if (!email?.length)
      throw new ErrorHandler(400, "Please enter a valid email address")
    else if (!emailRegex.test(email)) {
      throw new ErrorHandler(400, "Invalid email! Please try again")
    }
    if (!phone?.length)
      throw new ErrorHandler(400, "Please enter a valid phone number")
    else if (!phoneRegex.test(phone)) {
      throw new ErrorHandler(
        400,
        "Invalid Phone Number! Please try with country code"
      )
    }
    if (!duration?.length)
      throw new ErrorHandler(400, "Please enter a valid duration")
    if (!start?.length)
      throw new ErrorHandler(400, "Please enter a valid start time")

    const newPass = await Pass.create({
      name,
      phone,
      email,
      duration,
      start: start + ":00.000Z",
      generatedUserId: req.user.id,
      userName: req.user.name,
    })
    res.status(201).json({
      success: true,
      newPass: newPass,
      message: "Pass generated successfully",
    })
  } catch (err) {
    console.log(err)
    next(err)
  }
}

//@desc View all passes generated by a user
//@route Get /passes/viewPasses
const viewPasses = async (req, res, next) => {
  try {
    const passes = await Pass.find({ generatedUserId: req.user.id })

    res.status(201).json({
      success: true,
      passes: passes,
      message: "Passes fetched successfully",
    })
  } catch (err) {
    next(err)
  }
}

//@desc Verify pass by guard
//@route PUT /passes/verifyPass/:id
const verifyPass = async (req, res, next) => {
  try {
    const passVerified = await Pass.findOneAndUpdate(
      { _id: req.params._id },
      {
        checkInTime: new Date(),
      }
    )
    res.status(201).json({
      success: true,
      passVerified: passVerified,
      message: "Pass verified successfully",
    })
  } catch (err) {
    next(err)
  }
}

module.exports = { generatePass, viewPasses, verifyPass }
